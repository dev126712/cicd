services:
  sonar-qube:
    image: ${SONAR_QUBE_IMAGE}
    container_name: ${SONAR_QUBE_CONTAINER_NAME}
    ports:
      - ${SONAR_QUBE_PORT}:${SONAR_QUBE_PORT}
    networks:
      - pipeline_net
    env_file: .env
    depends_on:
      - db
    volumes:
      - sonar_data_v:/opt/sonarqube/data 
      - sonar_data_v_logs:/opt/sonarqube/logs
      - sonar_data_ext:/opt/sonarqube/extensions
      - sonar_data_plugins:/opt/sonarqube/lib/bundled-plugins
    environment:
      - SONAR_ES_JAVA_OPTS=-Xmx512m -Xms512m
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar
      - SONAR_JDBC_URL=jdbc:postgresql://db/${POSTGRES_DATABASE_NAME}


  jenkins:
    image: ${JENKINS_IMAGE}
    container_name: ${JENKINS_CONTAINER_NAME}
    ports:
      - ${JENKINS_PORT}:${JENKINS_PORT}
    networks:
      - pipeline_net
    env_file: .env
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
      # Optional: Mount Docker binary if your Jenkins image doesn't have it
      # - /usr/bin/docker:/usr/bin/docker

  nexus:
    image: ${NEXUS_IMAGE}
    container_name: ${NEXUS_CONTAINER_NAME}
    ports:
      - ${NEXUS_PORT}:${NEXUS_PORT}
    networks:
      - pipeline_net
    env_file: .env
    volumes:
      - nexus_data_v:/nexus-data

  db:
    image: ${DATABASE_IMAGE}
    env_file: .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER_NAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DATABASE_NAME}
    volumes:
      - postgres_sata:/var/lib/postgresql/data
    networks:
      - pipeline_net


volumes:
  jenkins_data_v:
  nexus_data_v:
  sonar_data_v:
  sonar_data_v_logs:
  postgres_data:
  sonar_data_plugins:
  sonar_data_ext:
  

networks:
  pipeline_net:
    name: ${PIPELINE_NETWORK}
    driver: bridge
